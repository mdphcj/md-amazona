<LinkContainer
    // to={`/search?category=${category}`}
    to={{
      pathname: '/search',
      // hash: '#hash',
      search: `?category=${category}`,
    }}
    onClick={() => setSidebarIsOpen(false)}
    >
    <Nav.Link>{category}</Nav.Link>
</LinkContainer>

productRouter.delete(
  '/:id',
  isAuth,
  isAdmin,
  expressAsyncHandler(async (req, res) => {
    // const product = await Product.findById(req.params.id);
    const product = await Product.findByIdAndDelete(req.params.id);
    if (product) {
      // await product.remove();
      res.send({ message: 'Product Deleted' });
    } else {
      res.status(404).send({ message: 'Product Not Found' });
    }
  })
);

orderRouter.delete(
  '/:id',
  isAuth,
  isAdmin,
  expressAsyncHandler(async (req, res) => {
    // const order = await Order.findById(req.params.id);
    const order = await Order.findByIdAndDelete(req.params.id);
    if (order) {
      // await order.remove();
      res.send({ message: 'Order Deleted' });
    } else {
      res.status(404).send({ message: 'Order Not Found' });
    }
  })
);

userRouter.delete(
  '/:id',
  isAuth,
  isAdmin,
  expressAsyncHandler(async (req, res) => {
    const user = await User.findById(req.params.id);
    if (user) {
      if (user.email === 'admin@example.com') {
        res.status(400).send({ message: 'Can Not Delete Admin User' });
        return;
      }
      // await user.remove();
      await user.deleteOne();
      res.send({ message: 'User Deleted' });
    } else {
      res.status(404).send({ message: 'User Not Found' });
    }
  })
);